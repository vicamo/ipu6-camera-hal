/*
* INTEL CONFIDENTIAL
*
* Copyright (C) 2010 - 2017 Intel Corporation.
* All Rights Reserved.
*
* The source code contained or described herein and all documents
* related to the source code ("Material") are owned by Intel Corporation
* or licensors. Title to the Material remains with Intel
* Corporation or its licensors. The Material contains trade
* secrets and proprietary and confidential information of Intel or its
* licensors. The Material is protected by worldwide copyright
* and trade secret laws and treaty provisions. No part of the Material may
* be used, copied, reproduced, modified, published, uploaded, posted,
* transmitted, distributed, or disclosed in any way without Intel's prior
* express written permission.
*
* No License under any patent, copyright, trade secret or other intellectual
* property right is granted to or conferred upon you by disclosure or
* delivery of the Materials, either expressly, by implication, inducement,
* estoppel or otherwise. Any license under such intellectual property rights
* must be express and approved by Intel in writing.
*/
#ifndef _isa_ps_gp_regs_block_regmem_h_
#define _isa_ps_gp_regs_block_regmem_h_

/* Generated with DAI generator 1.3.0 */

/* enumerate for all memories for devices of type isa_ps_gp_regs_block */
typedef enum {
	NUM_DAI_ISA_PS_GP_REGS_BLOCK_MEMORY_ID = 0
} dai_isa_ps_gp_regs_block_memory_id_t;

/* enumerate for all register bank types for devices of type isa_ps_gp_regs_block */
typedef enum {
	NUM_DAI_ISA_PS_GP_REGS_BLOCK_RB_TYPES = 0
} dai_isa_ps_gp_regs_block_rb_types_t;

/* enumerate for all registers for slave port slv_in for devices of type isa_ps_gp_regs_block */
typedef enum {
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ORIG_FRAME_SIZE                   = NUM_DAI_ISA_PS_GP_REGS_BLOCK_MEMORY_ID,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_FULL_FRAME_SIZE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SCALED_A_FRAME_SIZE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SCALED_B_FRAME_SIZE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_A_FRAME_SIZE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_B_FRAME_SIZE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ACKBUS_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_INPUT_CORR_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_BAYER_LSC_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_STAT_3_A_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_BAYER_DPC_PEXT_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_STAT_PAF_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_A_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_B_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2B_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2R_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_R2I_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_STAT_FORK_ADAPTER_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_ORIG_OUT_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_X2B_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_LSC_B2B_FORK_ADAPTER_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_ORIG_OUT_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_SCALED_A_OUT_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AWB_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AE_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AF_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_INPUT_CORR_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_LSC_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_LSC_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DPC_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DPC_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_X2B_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_X2B_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2B_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_INPUT_CORR_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AWBMUX_INPUT_CORR_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AEMUX_INPUT_CORR_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AFMUX_INPUT_CORR_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AWBMUX_B2B_MUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AEMUX_B2B_MUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_AFMUX_B2B_MUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_PAF_STRMSYNC_CFG,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_PAF_SRC_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_PAF_GDDPC_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_PAF_ISA_PS_STREAM_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_PAF_X2B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_A_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_LSC_MUX_INPUT_CORR_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DPC_MUX_INPUT_CORR_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_X2B_MUX_INPUT_CORR_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DPC_MUX_LSC_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_X2B_MUX_LSC_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_LSC_MUX_X2B_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DPC_MUX_X2B_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2B_MUX_LSC_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2B_MUX_X2B_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_LSC_MUX_DPC_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2B_MUX_DPC_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_X2B_MUX_DPC_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2B_B2B_MUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_STAT_B2B_MUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_STAT_INPUT_CORR_MUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_A_B2B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SIS_B_B2B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_ORIG_B2B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_B2R_B2B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_SCALED_A_OUT_R2I_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_SCALED_B_OUT_R2I_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_FULL_OUT_R2I_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_IR_DEPTH_OUT_X2B_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SVE_RGBIR_BP_MUX_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_IR_DEPTH_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_PIF_YUV_MODE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_INPUT_S_CORR_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_INPUT_M_CORR_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_MAIN_INPUT_DOL_DEMUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DOL_MUX_SEL,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ISA_MAIN_INPUT_DOL_DEMUX_PORT_BLK,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_DOL_SRST_OUT,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_ORIG_PADDED_FRAME_SIZE,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SPARE_0,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SPARE_1,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SPARE_2,
	DAI_ISA_PS_GP_REGS_BLOCK_REG_ISA_GP_REGS_SPARE_3,
	NUM_DAI_ISA_PS_GP_REGS_BLOCK_SLV_IN_REGISTERS                              = 85
} dai_isa_ps_gp_regs_block_slv_in_registers_t;

#endif /* _isa_ps_gp_regs_block_regmem_h_ */
